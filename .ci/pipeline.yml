---
resource_types:
  - name: google-cloud-storage
    type: docker-image
    source:
      repository: frodenas/gcs-resource

  - name: terraform
    type: docker-image
    source:
      repository: ljfranklin/terraform-resource
      tag: latest

resources:
- name: selfhydro-ui
  type: git
  source:
    uri: https://github.com/selfhydro/selfhydro-ui.git

- name: version
  type: semver
  source:
    driver: gcs
    bucket: selfhydro-versions
    key: selfhydro-ui
    json_key: |
      {
        "type": "service_account",
        "project_id": "selfhydro-197504",
        "private_key_id": "((gcs-service_account.private_key_id))",
        "private_key": "((gcs-service_account.private_key))",
        "client_email": "((gcs-service_account.client_email))",
        "client_id": "((gcs-service_account.client_id))",
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "token_uri": "https://oauth2.googleapis.com/token",
        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/concourse-deployment%40selfhydro-197504.iam.gserviceaccount.com"
      }

- name: terraform
  type: terraform
  source:
    backend_type: gcs
    vars:
      credentials: ((gcpServiceAccount.json))
    backend_config:
      bucket: selfhydro-infra-state
      prefix: selfhydro-ui
      credentials: ((gcpServiceAccount.json))

- name: gcs-artifact-bucket
  type: google-cloud-storage
  source:
    bucket: selfhydro-build-artifacts
    regexp: release-(.*).tar.gz
    json_key: |
      {
        "type": "service_account",
        "project_id": "selfhydro-197504",
        "private_key_id": "((gcs-service_account.private_key_id))",
        "private_key": "((gcs-service_account.private_key))",
        "client_email": "((gcs-service_account.client_email))",
        "client_id": "((gcs-service_account.client_id))",
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "token_uri": "https://oauth2.googleapis.com/token",
        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/concourse-deployment%40selfhydro-197504.iam.gserviceaccount.com"
      }

- name: selfhydro-ui-bucket
  type: google-cloud-storage
  source:
    bucket: selfhydro.com
    regexp: release-(.*).tgz
    json_key: |
      {
        "type": "service_account",
        "project_id": "selfhydro-197504",
        "private_key_id": "((gcs-service_account.private_key_id))",
        "private_key": "((gcs-service_account.private_key))",
        "client_email": "((gcs-service_account.client_email))",
        "client_id": "((gcs-service_account.client_id))",
        "auth_uri": "https://accounts.google.com/o/oauth2/auth",
        "token_uri": "https://oauth2.googleapis.com/token",
        "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
        "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/concourse-deployment%40selfhydro-197504.iam.gserviceaccount.com"
      }

jobs:
  - name: test
    plan:
      - get: selfhydro-ui
        trigger: true
      - task: unit-test
        file: selfhydro-ui/.ci/unit-test.yml
  - name: build
    plan:
      - get: selfhydro-ui
        trigger: true
        passed: [test]
      - get: version
        params: {bump: patch}
      - task: build
        file: selfhydro-ui/.ci/build.yml
        vars:
          version: version/version
      - put: gcs-artifact-bucket
        params:
          file: selfhydro-ui-build/selfhydro-ui-release-*
          predefined_acl: projectPrivate
      - put: version
        params: {file: version/version}
  - name: deploy
    plan:
      - get: version
        passed: [build]
        trigger: true
      - get: selfhydro-ui
      - get: gcs-artifact-bucket
        params:
          version: version/version
          filename: selfhydro-ui-release-(.*).tar.gz
          unpack: true
      - task: deploy-to-gcs
        file: selfhydro-ui/.ci/deploy.yml
  - name: terraform-plan
    plan:
      - get: selfhydro-ui
        trigger: true
      - put: terraform
        params:
          var_files: [selfhydro-ui/infra/prod.tfvars]
          terraform_source: selfhydro-ui/infra
          env_name: prod
          plan_only: true
  - name: terraform-apply
    plan:
      - get: selfhydro-ui
        passed: [terraform-plan]
      - get: terraform
        trigger: false
        passed: [terraform-plan]
      - put: terraform
        params:
          var_files: [selfhydro-ui/infra/prod.tfvars]
          terraform_source: selfhydro-ui/infra
          env_name: prod
          plan_run: true
